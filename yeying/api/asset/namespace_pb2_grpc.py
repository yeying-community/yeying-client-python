# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from yeying.api.asset import namespace_pb2 as yeying_dot_api_dot_asset_dot_namespace__pb2

GRPC_GENERATED_VERSION = '1.68.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in yeying/api/asset/namespace_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class NamespaceStub(object):
    """命名空间，用于隔离和资产治理的目的，确保用一个用户在使用不同的应用时产生的资产信息互补干扰。同时也方便用户管理资产。
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Search = channel.unary_unary(
                '/yeying.api.asset.Namespace/Search',
                request_serializer=yeying_dot_api_dot_asset_dot_namespace__pb2.SearchNamespaceRequest.SerializeToString,
                response_deserializer=yeying_dot_api_dot_asset_dot_namespace__pb2.SearchNamespaceResponse.FromString,
                _registered_method=True)
        self.Create = channel.unary_unary(
                '/yeying.api.asset.Namespace/Create',
                request_serializer=yeying_dot_api_dot_asset_dot_namespace__pb2.CreateNamespaceRequest.SerializeToString,
                response_deserializer=yeying_dot_api_dot_asset_dot_namespace__pb2.CreateNamespaceResponse.FromString,
                _registered_method=True)
        self.Detail = channel.unary_unary(
                '/yeying.api.asset.Namespace/Detail',
                request_serializer=yeying_dot_api_dot_asset_dot_namespace__pb2.NamespaceDetailRequest.SerializeToString,
                response_deserializer=yeying_dot_api_dot_asset_dot_namespace__pb2.NamespaceDetailResponse.FromString,
                _registered_method=True)
        self.Update = channel.unary_unary(
                '/yeying.api.asset.Namespace/Update',
                request_serializer=yeying_dot_api_dot_asset_dot_namespace__pb2.UpdateNamespaceRequest.SerializeToString,
                response_deserializer=yeying_dot_api_dot_asset_dot_namespace__pb2.UpdateNamespaceResponse.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/yeying.api.asset.Namespace/Delete',
                request_serializer=yeying_dot_api_dot_asset_dot_namespace__pb2.DeleteNamespaceRequest.SerializeToString,
                response_deserializer=yeying_dot_api_dot_asset_dot_namespace__pb2.DeleteNamespaceResponse.FromString,
                _registered_method=True)


class NamespaceServicer(object):
    """命名空间，用于隔离和资产治理的目的，确保用一个用户在使用不同的应用时产生的资产信息互补干扰。同时也方便用户管理资产。
    """

    def Search(self, request, context):
        """搜索命名空间
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """创建命名空间
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Detail(self, request, context):
        """命名空间详情
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """更新命名空间
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """删除命名空间
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NamespaceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=yeying_dot_api_dot_asset_dot_namespace__pb2.SearchNamespaceRequest.FromString,
                    response_serializer=yeying_dot_api_dot_asset_dot_namespace__pb2.SearchNamespaceResponse.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=yeying_dot_api_dot_asset_dot_namespace__pb2.CreateNamespaceRequest.FromString,
                    response_serializer=yeying_dot_api_dot_asset_dot_namespace__pb2.CreateNamespaceResponse.SerializeToString,
            ),
            'Detail': grpc.unary_unary_rpc_method_handler(
                    servicer.Detail,
                    request_deserializer=yeying_dot_api_dot_asset_dot_namespace__pb2.NamespaceDetailRequest.FromString,
                    response_serializer=yeying_dot_api_dot_asset_dot_namespace__pb2.NamespaceDetailResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=yeying_dot_api_dot_asset_dot_namespace__pb2.UpdateNamespaceRequest.FromString,
                    response_serializer=yeying_dot_api_dot_asset_dot_namespace__pb2.UpdateNamespaceResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=yeying_dot_api_dot_asset_dot_namespace__pb2.DeleteNamespaceRequest.FromString,
                    response_serializer=yeying_dot_api_dot_asset_dot_namespace__pb2.DeleteNamespaceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'yeying.api.asset.Namespace', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('yeying.api.asset.Namespace', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Namespace(object):
    """命名空间，用于隔离和资产治理的目的，确保用一个用户在使用不同的应用时产生的资产信息互补干扰。同时也方便用户管理资产。
    """

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yeying.api.asset.Namespace/Search',
            yeying_dot_api_dot_asset_dot_namespace__pb2.SearchNamespaceRequest.SerializeToString,
            yeying_dot_api_dot_asset_dot_namespace__pb2.SearchNamespaceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yeying.api.asset.Namespace/Create',
            yeying_dot_api_dot_asset_dot_namespace__pb2.CreateNamespaceRequest.SerializeToString,
            yeying_dot_api_dot_asset_dot_namespace__pb2.CreateNamespaceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Detail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yeying.api.asset.Namespace/Detail',
            yeying_dot_api_dot_asset_dot_namespace__pb2.NamespaceDetailRequest.SerializeToString,
            yeying_dot_api_dot_asset_dot_namespace__pb2.NamespaceDetailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yeying.api.asset.Namespace/Update',
            yeying_dot_api_dot_asset_dot_namespace__pb2.UpdateNamespaceRequest.SerializeToString,
            yeying_dot_api_dot_asset_dot_namespace__pb2.UpdateNamespaceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yeying.api.asset.Namespace/Delete',
            yeying_dot_api_dot_asset_dot_namespace__pb2.DeleteNamespaceRequest.SerializeToString,
            yeying_dot_api_dot_asset_dot_namespace__pb2.DeleteNamespaceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
