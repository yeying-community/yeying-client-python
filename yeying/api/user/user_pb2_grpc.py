# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from yeying.api.user import user_pb2 as yeying_dot_api_dot_user_dot_user__pb2

GRPC_GENERATED_VERSION = '1.68.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in yeying/api/user/user_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class UserStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Add = channel.unary_unary(
                '/yeying.api.user.User/Add',
                request_serializer=yeying_dot_api_dot_user_dot_user__pb2.AddUserRequest.SerializeToString,
                response_deserializer=yeying_dot_api_dot_user_dot_user__pb2.AddUserResponse.FromString,
                _registered_method=True)
        self.Detail = channel.unary_unary(
                '/yeying.api.user.User/Detail',
                request_serializer=yeying_dot_api_dot_user_dot_user__pb2.UserDetailRequest.SerializeToString,
                response_deserializer=yeying_dot_api_dot_user_dot_user__pb2.UserDetailResponse.FromString,
                _registered_method=True)
        self.List = channel.unary_unary(
                '/yeying.api.user.User/List',
                request_serializer=yeying_dot_api_dot_user_dot_user__pb2.UserListRequest.SerializeToString,
                response_deserializer=yeying_dot_api_dot_user_dot_user__pb2.UserListResponse.FromString,
                _registered_method=True)
        self.Delete = channel.unary_unary(
                '/yeying.api.user.User/Delete',
                request_serializer=yeying_dot_api_dot_user_dot_user__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=yeying_dot_api_dot_user_dot_user__pb2.DeleteUserResponse.FromString,
                _registered_method=True)
        self.Update = channel.unary_unary(
                '/yeying.api.user.User/Update',
                request_serializer=yeying_dot_api_dot_user_dot_user__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=yeying_dot_api_dot_user_dot_user__pb2.UpdateUserResponse.FromString,
                _registered_method=True)
        self.UpdateStatus = channel.unary_unary(
                '/yeying.api.user.User/UpdateStatus',
                request_serializer=yeying_dot_api_dot_user_dot_user__pb2.UpdateStatusRequest.SerializeToString,
                response_deserializer=yeying_dot_api_dot_user_dot_user__pb2.UpdateStatusResponse.FromString,
                _registered_method=True)


class UserServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Add(self, request, context):
        """添加用户
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Detail(self, request, context):
        """获取用户
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """用户列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """删除用户
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """修改用户信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateStatus(self, request, context):
        """修改用户状态，冻结/解冻
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Add': grpc.unary_unary_rpc_method_handler(
                    servicer.Add,
                    request_deserializer=yeying_dot_api_dot_user_dot_user__pb2.AddUserRequest.FromString,
                    response_serializer=yeying_dot_api_dot_user_dot_user__pb2.AddUserResponse.SerializeToString,
            ),
            'Detail': grpc.unary_unary_rpc_method_handler(
                    servicer.Detail,
                    request_deserializer=yeying_dot_api_dot_user_dot_user__pb2.UserDetailRequest.FromString,
                    response_serializer=yeying_dot_api_dot_user_dot_user__pb2.UserDetailResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=yeying_dot_api_dot_user_dot_user__pb2.UserListRequest.FromString,
                    response_serializer=yeying_dot_api_dot_user_dot_user__pb2.UserListResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=yeying_dot_api_dot_user_dot_user__pb2.DeleteUserRequest.FromString,
                    response_serializer=yeying_dot_api_dot_user_dot_user__pb2.DeleteUserResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=yeying_dot_api_dot_user_dot_user__pb2.UpdateUserRequest.FromString,
                    response_serializer=yeying_dot_api_dot_user_dot_user__pb2.UpdateUserResponse.SerializeToString,
            ),
            'UpdateStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateStatus,
                    request_deserializer=yeying_dot_api_dot_user_dot_user__pb2.UpdateStatusRequest.FromString,
                    response_serializer=yeying_dot_api_dot_user_dot_user__pb2.UpdateStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'yeying.api.user.User', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('yeying.api.user.User', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class User(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Add(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yeying.api.user.User/Add',
            yeying_dot_api_dot_user_dot_user__pb2.AddUserRequest.SerializeToString,
            yeying_dot_api_dot_user_dot_user__pb2.AddUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Detail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yeying.api.user.User/Detail',
            yeying_dot_api_dot_user_dot_user__pb2.UserDetailRequest.SerializeToString,
            yeying_dot_api_dot_user_dot_user__pb2.UserDetailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yeying.api.user.User/List',
            yeying_dot_api_dot_user_dot_user__pb2.UserListRequest.SerializeToString,
            yeying_dot_api_dot_user_dot_user__pb2.UserListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yeying.api.user.User/Delete',
            yeying_dot_api_dot_user_dot_user__pb2.DeleteUserRequest.SerializeToString,
            yeying_dot_api_dot_user_dot_user__pb2.DeleteUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yeying.api.user.User/Update',
            yeying_dot_api_dot_user_dot_user__pb2.UpdateUserRequest.SerializeToString,
            yeying_dot_api_dot_user_dot_user__pb2.UpdateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/yeying.api.user.User/UpdateStatus',
            yeying_dot_api_dot_user_dot_user__pb2.UpdateStatusRequest.SerializeToString,
            yeying_dot_api_dot_user_dot_user__pb2.UpdateStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
